import * as vue_demi from 'vue-demi';
import { PropType } from 'vue-demi';
import * as emoji_picker_element_shared from 'emoji-picker-element/shared';
import { EmojiClickEvent, SkinToneChangeEvent } from 'emoji-picker-element/shared';
export { CustomEmoji, DatabaseConstructorOptions, EmojiClickEventDetail, EmojiSkin, I18n, I18nCategories, NativeEmoji, PickerConstructorOptions, SkinTone, SkinToneChangeEventDetail } from 'emoji-picker-element/shared';
import Picker from 'emoji-picker-element/picker';
import Database from 'emoji-picker-element/database';

declare const _default: vue_demi.DefineComponent<{
    isDark: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    skinToneEmoji: StringConstructor;
    customEmoji: PropType<emoji_picker_element_shared.CustomEmoji[] | undefined>;
    dataSource: StringConstructor;
    locale: StringConstructor;
    customCategorySorting: PropType<(a: string, b: string) => number>;
    i18n: PropType<emoji_picker_element_shared.I18n | undefined>;
    pickerStyle: PropType<VuemojiPickerStyle>;
}, unknown, {
    picker: Picker;
}, {}, {
    handleClick(event: EmojiClickEvent): void;
    handleSkinToneChange(event: SkinToneChangeEvent): void;
    updatePickerProps(): void;
    updatePickerStyle(): void;
}, vue_demi.ComponentOptionsMixin, vue_demi.ComponentOptionsMixin, ("emojiClick" | "skinToneChange")[], "emojiClick" | "skinToneChange", vue_demi.VNodeProps & vue_demi.AllowedComponentProps & vue_demi.ComponentCustomProps, Readonly<vue_demi.ExtractPropTypes<{
    isDark: {
        type: BooleanConstructor;
        required: false;
        default: boolean;
    };
    skinToneEmoji: StringConstructor;
    customEmoji: PropType<emoji_picker_element_shared.CustomEmoji[] | undefined>;
    dataSource: StringConstructor;
    locale: StringConstructor;
    customCategorySorting: PropType<(a: string, b: string) => number>;
    i18n: PropType<emoji_picker_element_shared.I18n | undefined>;
    pickerStyle: PropType<VuemojiPickerStyle>;
}>> & {
    onEmojiClick?: ((...args: any[]) => any) | undefined;
    onSkinToneChange?: ((...args: any[]) => any) | undefined;
}, {
    isDark: boolean;
}>;

declare function useDatabase(): Database;

interface VuemojiPickerStyle {
    width?: string;
    height?: string;
    background?: string;
    borderColor?: string;
    borderSize?: string;
    buttonActiveBackground?: string;
    buttonHoverBackground?: string;
    categoryEmojiPadding?: string;
    categoryEmojiSize?: string;
    categoryFontColor?: string;
    categoryFontSize?: string;
    emojiPadding?: string;
    emojiSize?: string;
    indicatorColor?: string;
    indicatorHeight?: string;
    inputBorderColor?: string;
    inputBorderRadius?: string;
    inputFontColor?: string;
    inputFontSize?: string;
    inputLineHeight?: string;
    inputPadding?: string;
    inputPlaceholderColor?: string;
    numColumns?: string;
    outlineColor?: string;
    outlineSize?: string;
    skintoneBorderRadius?: string;
}

export { _default as VuemojiPicker, VuemojiPickerStyle, useDatabase };
